// A cook puts burgers in a pot. 
// A client checks if there is at least one burger in the pot,
// and if so, the client must take one.
range Burgers = 0..2
CLIENT = ( check -> get -> CLIENT ).
POT = POT[0],
POT[p: Burgers] = ( when p > 0 check -> POT[p]
| get -> POT[p-1]
| fill[n: Burgers] -> POT[n] ).
COOK = ( fill[p: 1..2] -> COOK )+{fill[0]}.
LOCK = ( acquire -> check -> release -> LOCK ).
||LOCKPOT = (LOCK || POT).
||DS = ( c1: CLIENT || c2: CLIENT || {c1,c2}::LOCKPOT || COOK )
/ { {c1, c2}.check/check, {c1, c2}.get/get }.
